<?php

/**
 * @file
 * Insallation functions for the Field Encryption module.
 */

/**
 * Implements hook_enable().
 */
function field_encrypt_enable() {
  // Clear the cache of existing data.
  cache_clear_all('*', 'cache_field', TRUE);
}

/**
 * Implements hook_disable().
 */
function field_encrypt_disable() {
  // Clear the cache of existing data.
  cache_clear_all('*', 'cache_field', TRUE);
}

/**
 * Implements hook_requirements().
 */
function field_encrypt_requirements($phase) {
  $t = get_t();

  $requirements = array();

  $cache_class_cache_field = settings_get('cache_class_cache_field', NULL);

  $requirements['field_encrypt_cache_class'] = array(
    'title' => $t('Field Encrypt Cache Class'),
    'value' => $cache_class_cache_field,
    'description' => $t('FieldEncryptDatabaseCache is set as the field cache class.'),
    'severity' => REQUIREMENT_OK,
  );

  if ($cache_class_cache_field != 'FieldEncryptDatabaseCache') {
    $requirements['field_encrypt_cache_class']['description'] = $t('FieldEncryptDatabaseCache needs to be set as the field cache class by adding <code>$settings[\'cache_class_cache_field\'] = \'FieldEncryptDatabaseCache\';</code> in settings.php.');
    $requirements['field_encrypt_cache_class']['severity'] = REQUIREMENT_ERROR;
  }

  if (module_exists('memcache')) {
    if ($cache_class_cache_field != 'FieldEncryptMemCacheBackdrop') {
      $requirements['field_encrypt_cache_class']['description'] = $t('FieldEncryptMemCacheBackdrop needs to be set as the field cache class by adding <code>$settings[\'cache_class_cache_field\'] = \'FieldEncryptMemCacheBackdrop\';</code> in settings.php.');
      $requirements['field_encrypt_cache_class']['severity'] = REQUIREMENT_ERROR;
    }
    else {
      $requirements['field_encrypt_cache_class']['description'] = $t('FieldEncryptMemCacheBackdrop is set as the field cache class.');
      $requirements['field_encrypt_cache_class']['severity'] = REQUIREMENT_OK;
    }
  }

  return $requirements;
}

/**
 * Implements hook_update_last_removed().
 */
function field_encrypt_update_last_removed() {
  return 7000;
}
